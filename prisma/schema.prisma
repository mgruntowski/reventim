generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  userId      String    @id @default(uuid())
  cpf         String    @unique
  firstName   String
  birthDate   DateTime
  email       String    @unique
  createdAt   DateTime  @default(now())
  discardedAt DateTime?
  nickname    String?
  address     String?
  phone       String    @unique
  lastName    String
  password    String
  tickets     Ticket[]
}

model Ticket {
  ticketId    String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  discardedAt DateTime?
  soldAt      DateTime?
  batchId     String
  userId      String
  batch       Batch     @relation(fields: [batchId], references: [batchId])
  user        User      @relation(fields: [userId], references: [userId])
}

model Batch {
  batchId   String   @id @default(uuid())
  createdAt DateTime @default(now())
  price     Int
  name      String
  order     Int
  sectionId String
  section   Section  @relation(fields: [sectionId], references: [sectionId])
  tickets   Ticket[]
}

model Section {
  sectionId String   @id @default(uuid())
  createdAt DateTime @default(now())
  name      String
  eventId   String
  batches   Batch[]
  event     Event    @relation(fields: [eventId], references: [eventId])
}

model Event {
  eventId      String    @id @default(uuid())
  createdAt    DateTime  @default(now())
  discardedAt  DateTime?
  name         String
  date         DateTime
  zipCode      Int
  federalUnit  String
  city         String
  street       String
  number       Int
  complement   String?
  locationName String
  pictureUrl   String
  neighborhood String
  sections     Section[]
}
